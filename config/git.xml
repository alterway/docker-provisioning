<?xml version="1.0" encoding="UTF-8"?>
<project name="git" description="Frontend build" default="git:info" basedir=".">

    <!-- Configuration for Behat. -->
    <if>
        <or>
            <not><isset property="git.options"/></not>
            <equals arg1="${git.options}" arg2="" />
        </or>
        <then><property name="git.options" value="--profile=chrome" /></then>
    </if>
    <if>
        <isset property="git.options"/>
        <then>
            <property name="oldproperty" value="${git.options}"/>
            <property name="verify.git.options" value="${oldproperty}">
                <filterchain>
                    <replaceregexp>
                        <regexp pattern="," replace=" " ignoreCase="true"/>
                    </replaceregexp>
                </filterchain>
            </property>
        </then>
    </if>

    <target name="git:info">
        <echo>This file is a shortcut build for git definition</echo>
    </target>
    
    <target name="git:switch">  
        <available file="/.git" type="dir" property="dir.Exists" />
        <if>
            <isset property="dir.Exists"/>
            <then>
                <phingcall target="git:switch-done" />
            </then> 
        </if>               
    </target>      
 
    <target name="git:switch-done">         
        <!-- Switch the project to the given branch -->
        <gitcheckout
            repository="${project.basedir}"
            branchname="${project.branch}" quiet="true" />
    </target>  
    
    <target name="git:create-switch-done">         
        <!-- create and switch to "mybranch" branch -->
        <gitcheckout
            repository="${project.basedir}"
            branchname="${project.branch}" quiet="true" create="true"/>
    </target>
    
    <target name="git:create-force-done">         
        <!-- create (force) already created branch -->
        <gitcheckout
            repository="${project.basedir}"
            branchname="${project.branch}" quiet="true" forceCreate="true"/>
    </target>

    <target name="git:changelog">
        <echo msg="Generate changelog from git repository" />
        <echo msg="cmd:: changelog-generator generate ${verify.git.options}"/>
        <exec command="changelog-generator generate ${verify.git.options}" passthru="true" />
    </target>

</project>


